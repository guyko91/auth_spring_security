spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE-CLIENT-ID}
            client-secret: ${GOOGLE-CLIENT-SECRET}
            scope: profile, email
            redirect-uri: "{baseUrl}/oauth2/login/code/{registrationId}"
            authorization-grant-type: authorization_code
            client-name: Google
          kakao:
            client-id: ${KAKAO-CLIENT-ID}
            client-secret: ${KAKAO-CLIENT-SECRET}
            scope: profile_nickname, profile_image
            redirect-uri: "{baseUrl}/oauth2/login/code/{registrationId}"
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            client-name: Kakao
        provider:
          # Google 및 FaceBook 과 같은 유명 서비스들은 이미 기본적인 설정이 되어 있어 provider 생략 가능
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://accounts.google.com/o/oauth2/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password:

  # JPA 설정
  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        auto_quote_keyword: true
        format_sql: true
        use_sql_comments: true
        highlight_sql: true
        default_batch_fetch_size: 500
    open-in-view: false
    defer-datasource-initialization: true

  h2:
    console:
      enabled: true
      path: /h2-console

  data:
    redis:
      host: localhost
      port: 6379
      password: ${REDIS-PASSWORD}

prop:
  auth:
    accessTokenExpMilli: 1800000
    refreshTokenExpMilli: 864000000
  oauth2:
    loginSuccessRedirectUri: http://localhost:5173/login-success
    loginSuccessTokenQueryParam: accessToken
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect